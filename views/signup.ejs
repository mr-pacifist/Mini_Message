<%- include("./partials/header.ejs")%>

    <div class="signup-modal-wrapper" id="">
      <div class="modal">
        <div class="inner_modal">
        <div class="modal-title">
          <h2>Sign Up</h2>
        </div>
        <div class="modal-body">
          <form  
            method="post" action="/signup" 
            enctype="multipart/form-data"
            id="add-user-form"
            >
            <input type="text" placeholder="enter name" name="name" />
            <p class="error name-error"></p>

            <input type="text" placeholder="enter email" name="email" />
            <p class="error email-error"></p>

            <input type="text" placeholder="enter mobile" name="mobile" />
            <p class="error mobile-error"></p>

            <input type="password" placeholder="enter password" name="password"/>
            <p class="error password-error"></p>

            <input type="file" name="photo" />
            <p class="error photo-error"></p>

            <p class="error common-error"></p>

            <input class="login-submit" type="submit" value="Submit" />
            <span class="signUptext">Back to <a class="signUpLink" href="/">login</a></span>
          </form>
        </div>
      </div>
      </div>
    </div>
<script>
const form = document.querySelector("#add-user-form");
// success toast 
const successToast = Toastify({
  text: "Signup successfull! Reconnecting to inbox...",
  duration: 2000,
});


//form submit handler
form.onsubmit = async function (event) {
  event.preventDefault();
  
  //clear error from placeholder & input
  const errorPlaceholder = document.querySelectorAll("p.error");
  for(let i = 0; i < errorPlaceholder.length; i++){
    errorPlaceholder[i].style.display = "none";
  }
 

  const inputErrors = document.querySelectorAll("input.error");
  if(inputErrors.length > 0) {
    for(let j = 0; j < inputErrors.length; j++) {
      inputErrors[j].classList.remove("error");
    }
  }

  // form data preparetion
  const formData = new FormData(form);

  // send request to server 
  let response = await fetch("/signup",{
    method: "POST",
    body: formData,
  });

  //get response 
  let result = await response.json();

  // handle error
  if(result.errors) {
    Object.keys(result.errors).forEach((fieldName) => {
      // visible error to ui
      form[fieldName].classList.add("error");

      //Show error to placeholders (inside of p tag)
      const errorP = document.querySelector(`.${fieldName}-error`);
      errorP.textContent = result.errors[fieldName].msg;
      // placeholder visible
      errorP.style.display = "block";

    });
  }else{
    // successs
    successToast.showToast();

    document.querySelector("p.error").style.diplay = "none";

    //redirecting to inbox after 1 sec
    setTimeout(() => {
      location.href = "/users";
      //location.href = "/inbox";
    },2000);

  }

};
      


    </script>
  </body>
</html>
